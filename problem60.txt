以下のように変化していく。フレームを;で区切り、最新のものほど左に、さらに値の対応を=で表すことにする。
１行目：{a = 100}
２行目：{b = 1, a = 100}
ここでフレームが一個増える、letの定義で使われているa,bの値は既存のフレームのもの
３〜５行目：{c = 0, b = 101, a = 10; b = 1, a = 100}
さらにここでフレームが一個増える。まず、a、bが以下のようになる。
６〜７行目：{b = 11, a = 0; c = 0, b = 101, a = 10; b = 1, a = 100}
そしてcのところで一度フレームが増える
８〜９行目：{b = 9; b = 11, a = 0; c = 0, b = 101, a = 10; b = 1, a = 100}
最新のフレームのbとまだletの定義中なので二つ前のフレームのaが使われて(- b a)が-1と評価される。この結果、最新のフレームが削除されてcに評価した結果が入る
１０行目：{c = -1, b = 11, a = 0; c = 0, b = 101, a = 10; b = 1, a = 100}
そしてこの時点の最新のフレームが使われて(+ a b c)が評価されて10になる。
その後let式の評価がすべて終わったので二つのフレームが削除され元に戻る。
１１行目：{b = 1, a = 100}

コード
(define a 100)
(define b 1)
(let ((a 10)
      (b (+ a 1))
      (c (- b 1)))
  (let ((a c)
        (b (+ a 1))
        (c (let ((b 9))
             (- b a))))
    (+ a b c)))
